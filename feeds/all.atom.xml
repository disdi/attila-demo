<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Libre Car</title><link href="https://librecar.dev/" rel="alternate"></link><link href="https://librecar.dev/feeds/all.atom.xml" rel="self"></link><id>https://librecar.dev/</id><updated>2023-06-24T03:56:31+02:00</updated><subtitle>Libre Car Control</subtitle><entry><title>Milestone 1 Complete</title><link href="https://librecar.dev/2023/06/milestone-one-complete/" rel="alternate"></link><published>2023-06-08T14:21:00+02:00</published><updated>2023-06-24T03:56:31+02:00</updated><author><name>disdi</name></author><id>tag:librecar.dev,2023-06-08:/2023/06/milestone-one-complete/</id><summary type="html">&lt;div class="section" id="ctucan-controller-for-linux"&gt;
&lt;h2&gt;CTUCAN Controller for Linux&lt;/h2&gt;
&lt;p&gt;We updated linux-on-litex kernel config to enable CTUCAN linux driver.&lt;/p&gt;
&lt;p&gt;The screenshoot below shows the menuconfig to enable CTUCAN driver:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/assets/images/ctucan-config.png"&gt;&lt;img alt="Image" src="/assets/images/ctucan-config.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next we had to update the device tree manually to add a section for CTUCAN driver:&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;CTU_CAN_FD_0: &lt;a class="reference external" href="mailto:CTU_CAN_FD&amp;#64;80010000"&gt;CTU_CAN_FD&amp;#64;80010000&lt;/a&gt; {&lt;/dt&gt;
&lt;dd&gt;compatible = &amp;quot;ctu,ctucanfd&amp;quot;;
reg = &amp;lt;0x80010000 0x10000&amp;gt;;
interrupt-parent …&lt;/dd&gt;&lt;/dl&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="ctucan-controller-for-linux"&gt;
&lt;h2&gt;CTUCAN Controller for Linux&lt;/h2&gt;
&lt;p&gt;We updated linux-on-litex kernel config to enable CTUCAN linux driver.&lt;/p&gt;
&lt;p&gt;The screenshoot below shows the menuconfig to enable CTUCAN driver:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/assets/images/ctucan-config.png"&gt;&lt;img alt="Image" src="/assets/images/ctucan-config.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next we had to update the device tree manually to add a section for CTUCAN driver:&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;CTU_CAN_FD_0: &lt;a class="reference external" href="mailto:CTU_CAN_FD&amp;#64;80010000"&gt;CTU_CAN_FD&amp;#64;80010000&lt;/a&gt; {&lt;/dt&gt;
&lt;dd&gt;compatible = &amp;quot;ctu,ctucanfd&amp;quot;;
reg = &amp;lt;0x80010000 0x10000&amp;gt;;
interrupt-parent = &amp;lt;&amp;amp;intc0&amp;gt;;
interrupts = &amp;lt;0 30 4&amp;gt;;
clocks = &amp;lt;&amp;amp;sys_clk&amp;gt;;
status = &amp;quot;okay&amp;quot;;
};&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The link to the complete modified device-tree is available at below link -
&lt;a class="reference external" href="https://github.com/disdi/linux-on-litex-vexriscv/commit/64970aea0ce4dfb10d16ffeece8837b032a702d4"&gt;https://github.com/disdi/linux-on-litex-vexriscv/commit/64970aea0ce4dfb10d16ffeece8837b032a702d4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When Linux  boots up, it shows the CTUCAN linux driver getting initialized.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/assets/images/ctucan-linux-boot.png"&gt;&lt;img alt="Image2" src="/assets/images/ctucan-linux-boot.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the buildroot Image booting up we can clearly see the CTUCAN driver module is associated with a device:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/assets/images/ctucan-buildroot.png"&gt;&lt;img alt="Image3" src="/assets/images/ctucan-buildroot.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Further, it gets enumerated as a network device:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/assets/images/ctucan-net.png"&gt;&lt;img alt="Image4" src="/assets/images/ctucan-net.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next step is to connect Digilent Arty Board running CTUCAN IP core with an external MCP2551 CAN transceiver Board and attempt
CAN transmission to another device on this CAN Bus.&lt;/p&gt;
&lt;/div&gt;
</content><category term="misc"></category><category term="Nlnet"></category></entry><entry><title>Milestone 1 Update</title><link href="https://librecar.dev/2023/05/milestine-one-update/" rel="alternate"></link><published>2023-05-30T01:25:00+02:00</published><updated>2023-05-30T12:35:24+02:00</updated><author><name>disdi</name></author><id>tag:librecar.dev,2023-05-30:/2023/05/milestine-one-update/</id><summary type="html">&lt;div class="section" id="ctucan-controller-for-linux"&gt;
&lt;h2&gt;CTUCAN Controller for Linux&lt;/h2&gt;
&lt;p&gt;We updated linux-on-litex project to integrate CTUCAN Controller booting over Linux.&lt;/p&gt;
&lt;p&gt;The link to the code is available at below link -
&lt;a class="reference external" href="https://github.com/disdi/linux-on-litex-vexriscv/commit/e9f9c6b14bca11cca2195bd61f9c5334ead3221d"&gt;https://github.com/disdi/linux-on-litex-vexriscv/commit/e9f9c6b14bca11cca2195bd61f9c5334ead3221d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When Litex BIOS boots up, it shows all the peripherals needed to boot linux alongwith CTUCAN Controller in …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="ctucan-controller-for-linux"&gt;
&lt;h2&gt;CTUCAN Controller for Linux&lt;/h2&gt;
&lt;p&gt;We updated linux-on-litex project to integrate CTUCAN Controller booting over Linux.&lt;/p&gt;
&lt;p&gt;The link to the code is available at below link -
&lt;a class="reference external" href="https://github.com/disdi/linux-on-litex-vexriscv/commit/e9f9c6b14bca11cca2195bd61f9c5334ead3221d"&gt;https://github.com/disdi/linux-on-litex-vexriscv/commit/e9f9c6b14bca11cca2195bd61f9c5334ead3221d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When Litex BIOS boots up, it shows all the peripherals needed to boot linux alongwith CTUCAN Controller in the memory region.
The screenshoot below of Litex Console:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/assets/images/litex-linux.png"&gt;&lt;img alt="Image" src="/assets/images/litex-linux.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next step is to modify linux kernel booting over the litex bitstream with CTUCAN Controller to enumerate a CAN device.&lt;/p&gt;
&lt;/div&gt;
</content><category term="misc"></category><category term="Nlnet"></category></entry><entry><title>Milestone 1</title><link href="https://librecar.dev/2023/05/milestone-1/" rel="alternate"></link><published>2023-05-09T21:43:12+02:00</published><updated>2023-05-30T12:06:08+02:00</updated><author><name>disdi</name></author><id>tag:librecar.dev,2023-05-09:/2023/05/milestone-1/</id><summary type="html">&lt;p&gt;This is to update on the first milestone that is archeived in Libre Car Control project.&lt;/p&gt;
&lt;p&gt;FPGA board boots up Linux using linux-on-litex-vexriscv&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h1&gt;Replacing ECP5 with Artix7&lt;/h1&gt;
&lt;p&gt;We switched from Lattice ECP5 to Xillinx Artix7 FPGA since we found that yosys toolchain was not able to synthesize
vhdl code. The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is to update on the first milestone that is archeived in Libre Car Control project.&lt;/p&gt;
&lt;p&gt;FPGA board boots up Linux using linux-on-litex-vexriscv&lt;/p&gt;
&lt;h6&gt;&lt;/h6&gt;
&lt;h1&gt;Replacing ECP5 with Artix7&lt;/h1&gt;
&lt;p&gt;We switched from Lattice ECP5 to Xillinx Artix7 FPGA since we found that yosys toolchain was not able to synthesize
vhdl code. The project is now being develop on Digilent Artix7 board.
We are able to boot Linux on Artix7 from the official Litex repository since this board is officially supported.&lt;/p&gt;
&lt;h1&gt;CTUCAN Controller IP&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- CTUCAN controller Litex Integration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We generated VHDL code for CTUCAN controller and used the CTUCAN wrapper to integrate it in Litex ecosystem. It became
available as python egg in the development environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- Litex SOC with CTUCAN Controller
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We created a new Litex Core with CTUCAN controller and mapped it to the processor. When Litex BIOS boots up, CTUCAN
controller can be seen in the memory region.&lt;/p&gt;
&lt;p&gt;The link to the code is available &lt;a href="https://github.com/disdi/litex-boards/commit/82413d266bb493768ba8d74b2347e850627f6c81"&gt;here&lt;/a&gt;&lt;/p&gt;</content><category term="Update"></category><category term="Nlnet"></category></entry><entry><title>Introduction</title><link href="https://librecar.dev/2023/05/introduction/" rel="alternate"></link><published>2023-05-01T21:43:12+02:00</published><updated>2023-05-30T11:24:40+02:00</updated><author><name>disdi</name></author><id>tag:librecar.dev,2023-05-01:/2023/05/introduction/</id><content type="html">&lt;p&gt;This is introductory post for the project Libre Car Control funded by Nlnet.&lt;/p&gt;</content><category term="Update"></category><category term="Nlnet"></category></entry></feed>